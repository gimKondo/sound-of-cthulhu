name: Release

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      MAC_OS_VERSION: macOS-latest
      WIN_OS_VERSION: windows-latest

    strategy:
      matrix:
        # この中でenvにアクセスできないので直書き
        os: [macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set release version
        shell: bash
        run: echo "RELEASE_VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
          node-version: v16.x
      - name: yarn install
        run: |
          yarn install
          yarn postinstall

      - name: Build for macOS
        if: matrix.os == env.MAC_OS_VERSION
        run: yarn electron:build --publish never --mac
        env:
          USE_HARD_LINKS: false
      - name: Create GitHub Release(Mac)
        if: matrix.os == env.MAC_OS_VERSION
        uses: softprops/action-gh-release@v1
        with:
          files: "dist_electron/sound-of-cthulhu*.dmg"
          tag_name: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for Windows
        if: matrix.os == env.WIN_OS_VERSION
        run: yarn electron:build --publish never --win
        env:
          USE_HARD_LINKS: false
      - name: Create GitHub Release(Windows)
        if: matrix.os == env.WIN_OS_VERSION
        uses: softprops/action-gh-release@v1
        with:
          files: "dist_electron/sound-of-cthulhu*.exe"
          tag_name: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
